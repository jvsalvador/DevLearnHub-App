<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".module.Java_Module5_5">

    <TextView
        android:id="@+id/textView249"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="15dp"
        android:layout_marginTop="30dp"
        android:fontFamily="@font/poppins_bold"
        android:text="Java Vector"
        android:textSize="20sp"
        android:textStyle="bold" />

    <TextView
        android:id="@+id/textView248"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/textView249"
        android:layout_marginStart="15dp"
        android:layout_marginTop="10dp"
        android:text="The Vector class is an implementation of the List interface that allows us to create resizable-arrays similar to the ArrayList class."
        android:textSize="12sp" />

    <TextView
        android:id="@+id/textView250"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/textView248"
        android:layout_marginStart="15dp"
        android:layout_marginTop="10dp"
        android:fontFamily="@font/poppins_bold"
        android:text="Java Vector vs. ArrayList"
        android:textSize="16sp"
        android:textStyle="bold" />

    <TextView
        android:id="@+id/textView251"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/textView250"
        android:layout_marginStart="10dp"
        android:layout_marginTop="10dp"
        android:text="In Java, both ArrayList and Vector implements the List interface and provides the same functionalities. However, there exist some differences between them.\n\nThe Vector class synchronizes each individual operation. This means whenever we want to perform some operation on vectors, the Vector class automatically applies a lock to that operation.\n\nIt is because when one thread is accessing a vector, and at the same time another thread tries to access it, an exception called ConcurrentModificationException is generated. Hence, this continuous use of lock for each operation makes vectors less efficient.\n\nHowever, in array lists, methods are not synchronized. Instead, it uses the Collections.synchronizedList() method that synchronizes the list as a whole."
        android:textSize="12sp" />

    <TextView
        android:id="@+id/textView252"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/textView251"
        android:layout_marginStart="15dp"
        android:layout_marginTop="10dp"
        android:fontFamily="@font/poppins_bold"
        android:text="Creating a Vector"
        android:textSize="16dp"
        android:textStyle="bold" />

    <TextView
        android:id="@+id/textView253"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/textView252"
        android:layout_marginStart="15dp"
        android:layout_marginTop="10dp"
        android:text="Here is how we can create vectors in Java."
        android:textSize="12sp" />

    <TextView
        android:id="@+id/textView254"
        android:layout_width="380dp"
        android:layout_height="wrap_content"
        android:layout_below="@+id/textView253"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="10dp"
        android:background="@color/black"
        android:text="\n   Vector<Type> vector = new Vector<>();\n"
        android:textColor="@color/white"
        android:textSize="12sp" />

    <TextView
        android:id="@+id/textView255"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/textView254"
        android:layout_marginStart="15dp"
        android:layout_marginTop="10dp"
        android:text="Here, Type indicates the type of a linked list. For example,"
        android:textSize="12sp" />

    <TextView
        android:id="@+id/textView257"
        android:layout_width="380dp"
        android:layout_height="wrap_content"
        android:layout_below="@+id/textView255"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="10dp"
        android:background="@color/black"
        android:text="\n    // create Integer type linked list\n    Vector<Integer> vector= new Vector<>();\n\n    // create String type linked list\n    Vector<String> vector= new Vector<>();\n"
        android:textColor="@color/white"
        android:textSize="12sp" />

    <TextView
        android:id="@+id/btn_tap_to_next33"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:layout_centerHorizontal="true"
        android:layout_marginBottom="30dp"
        android:fontFamily="@font/poppins_regular"
        android:text="Tap to continue"
        android:textSize="16sp" />

</RelativeLayout>