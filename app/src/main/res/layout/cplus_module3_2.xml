<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".module.Cplus_Module3_2">

    <TextView
        android:id="@+id/textView937"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="15dp"
        android:layout_marginTop="20dp"
        android:fontFamily="@font/poppins_bold"
        android:text="C++ Function Overloading"
        android:textSize="20sp" />

    <TextView
        android:id="@+id/textView938"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/textView937"
        android:layout_marginStart="15dp"
        android:layout_marginTop="10dp"
        android:text="In C++, two functions can have the same name if the number and/or type of arguments passed is different.\n\nThese functions having the same name but different arguments are known as overloaded functions. For example:"
        android:textSize="12sp" />

    <TextView
        android:id="@+id/textView939"
        android:layout_width="380dp"
        android:layout_height="wrap_content"
        android:layout_below="@+id/textView938"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="10dp"
        android:background="@color/black"
        android:text="\n    // same name different arguments\n    int test() { }\n    int test(int a) { }\n    float test(double a) { }\n    int test(int a, double b) { }\n"
        android:textColor="@color/white"
        android:textSize="12sp" />

    <TextView
        android:id="@+id/textView940"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/textView939"
        android:layout_marginStart="15dp"
        android:layout_marginTop="10dp"
        android:text="Here, all 4 functions are overloaded functions.\n\nNotice that the return types of all these 4 functions are not the same. Overloaded functions may or may not have different return types but they must have different arguments.\n\nFor example,"
        android:textSize="12sp" />

    <TextView
        android:id="@+id/textView941"
        android:layout_width="380dp"
        android:layout_height="wrap_content"
        android:layout_below="@+id/textView940"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="10dp"
        android:background="@color/black"
        android:text="\n    // Error code\n    int test(int a) { }\n    double test(int b){ }\n"
        android:textColor="@color/white"
        android:textSize="12sp" />

    <TextView
        android:id="@+id/textView942"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/textView941"
        android:layout_marginStart="15dp"
        android:layout_marginTop="10dp"
        android:text="Here, both functions have the same name, the same type, and the same number of arguments. Hence, the compiler will throw an error."
        android:textSize="12sp" />

    <TextView
        android:id="@+id/cplus_tap_to_next5"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:layout_centerHorizontal="true"
        android:layout_marginBottom="30dp"
        android:fontFamily="@font/poppins_regular"
        android:text="Tap to continue"
        android:textSize="16sp" />
</RelativeLayout>